apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: COSA-Pod-ephemeral
  template: COSA-Pod-ephemeral-template
metadata:
  annotations:
    openshift.io/display-name: COSA Pod (Ephemeral)
  name: COSA-Pod-ephemeral

objects:

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
       serviceacounts.coreos.com/account: 'secrets'
    name: ${SA}

- apiVersion: authorization.openshift.io/v1
  kind: Role
  metadata:
    name: ${SA}_Secrets
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - watch
    - get
    - list

- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: ${SA}_Secrets
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${SA}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${COSA_POD_NAME}
  spec:
    replicas: 1
    selector:
      name: ${COSA_POD_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${COSA_POD_NAME}
      spec:
        containers:
        - env:
          - name: OC_BIN_URL
            value: "https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz"
          args:
            - /bin/bash
            - -c
            - '(cd /tmp; curl $OC_BIN_URL -O; tar -C /srv -xvvf oc.tar.gz); /srv/oc login ${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT} --token=$(< /var/run/secrets/kubernetes.io/serviceaccount/token) --certificate-authority /var/run/secrets/kubernetes.io/serviceaccount/ca.crt;  exec sleep infinity'
          command:
            - /usr/bin/dumb-init
          image: coreos-assembler:buildconfig-master
          imagePullPolicy: IfNotPresent
          name: ${COSA_POD_NAME}
          resources:
            limits:
              memory: "4Gi"
              cpu: "2000m"
              devices.kubevirt.io/kvm: "1"
            requests:
              memory: "4Gi"
              cpu: "2000m"
              devices.kubevirt.io/kvm: "1"
          volumeMounts:
          - mountPath: /srv
            name: srv
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: ${SA}
        volumes:
        - name: srv
          emptyDir:
            medium: ""

parameters:
- description: The COSA Pod Name
  displayName: COSA Pod Service Name
  name: COSA_POD_NAME
  value: cosa-podder

- description: Service Account
  name: SA
  value: cosa-podder

